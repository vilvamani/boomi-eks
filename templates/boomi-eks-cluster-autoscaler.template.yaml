AWSTemplateFormatVersion: "2010-09-09"
Metadata:
  QSLint:
    Exclusions: [W9002, W9003, W9004, W9006]
Description: "Deploys the auto-scaler helm chart into an existing kubernetes cluster (qs-1ql475ceo)"
Parameters:
  NodeInstanceRoleName:
    Type: String
  NodeAutoScalingGroup1:
    Type: String
  NodeAutoScalingGroup2:
    Type: String
  NodeAutoScalingGroup3:
    Type: String
  EksClusterName:
    Type: String
  KubernetesVersion:
    Type: String
    AllowedValues: [ "1.16" ]
    Default: "1.16"
# NOTE: The cluster autoscaler version number is dependant on the K8S version it is being
#       deployed into. See...
#       https://github.com/kubernetes/autoscaler/tree/master/cluster-autoscaler#releases
#       https://github.com/kubernetes/autoscaler/releases
Conditions:
  is16: !Equals [ !Ref KubernetesVersion, "1.16" ]
Mappings:
  K8sVersionMap:
    "1.13":
      ImageTag: v1.13.9
    "1.14":
      ImageTag: v1.14.7
    "1.15":
      ImageTag: v1.15.5
    "1.16":
      ImageTag: v1.16.5
Resources:
  # Policy to apply to NodeInstanceRole
  ClusterAutoScalerPolicyNode1:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: cluster-autoscaler-node1
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - autoscaling:DescribeAutoScalingGroups
              - autoscaling:DescribeAutoScalingInstances
              - autoscaling:DescribeLaunchConfigurations
              - autoscaling:DescribeTags
            Resource: "*"
          - Effect: Allow
            Action:
              - autoscaling:SetDesiredCapacity
              - autoscaling:TerminateInstanceInAutoScalingGroup
            Resource: !Sub "arn:${AWS::Partition}:autoscaling:${AWS::Region}:${AWS::AccountId}:autoScalingGroup:*:autoScalingGroupName/${NodeAutoScalingGroup1}"
      Roles:
        - !Ref NodeInstanceRoleName

  ClusterAutoScalerPolicyNode2:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: cluster-autoscaler-node2
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - autoscaling:DescribeAutoScalingGroups
              - autoscaling:DescribeAutoScalingInstances
              - autoscaling:DescribeLaunchConfigurations
              - autoscaling:DescribeTags
            Resource: "*"
          - Effect: Allow
            Action:
              - autoscaling:SetDesiredCapacity
              - autoscaling:TerminateInstanceInAutoScalingGroup
            Resource: !Sub "arn:${AWS::Partition}:autoscaling:${AWS::Region}:${AWS::AccountId}:autoScalingGroup:*:autoScalingGroupName/${NodeAutoScalingGroup2}"
      Roles:
        - !Ref NodeInstanceRoleName

  ClusterAutoScalerPolicyNode3:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: cluster-autoscaler-node3
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - autoscaling:DescribeAutoScalingGroups
              - autoscaling:DescribeAutoScalingInstances
              - autoscaling:DescribeLaunchConfigurations
              - autoscaling:DescribeTags
            Resource: "*"
          - Effect: Allow
            Action:
              - autoscaling:SetDesiredCapacity
              - autoscaling:TerminateInstanceInAutoScalingGroup
            Resource: !Sub "arn:${AWS::Partition}:autoscaling:${AWS::Region}:${AWS::AccountId}:autoScalingGroup:*:autoScalingGroupName/${NodeAutoScalingGroup3}"
      Roles:
        - !Ref NodeInstanceRoleName

  # Install auto-scaler helm chart
  AutoScalerHelmChart:
    DependsOn:
      - ClusterAutoScalerPolicyNode1
      - ClusterAutoScalerPolicyNode2
      - ClusterAutoScalerPolicyNode3
    Type: "AWSQS::Kubernetes::Helm"
    Properties:
      ClusterID: !Ref EksClusterName
      Namespace: kube-system
      Chart: stable/cluster-autoscaler
      Values:
        awsRegion: !Ref 'AWS::Region'
        cloudProvider: aws
        image.tag: !FindInMap
          - K8sVersionMap
          - !Ref KubernetesVersion
          - ImageTag
        image.repository: !If [ is16, us.gcr.io/k8s-artifacts-prod/autoscaling/cluster-autoscaler, k8s.gcr.io/cluster-autoscaler ]
        rbac.create: true
        rbac.pspEnabled: true
        autoDiscovery.clusterName: !Ref EksClusterName
        sslCertPath: /etc/ssl/certs/ca-bundle.crt
        extraArgs.balance-similar-node-groups: false
        extraArgs.expander: random
Outputs:
  AutoScalerReleaseName:
    Value: !Ref AutoScalerHelmChart
